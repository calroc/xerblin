#!/usr/bin/env python
"""
    Copyright (C) 2004 - 2008 Simon Forman

    This file is part of Xerblin.

    Xerblin is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

"""
from Tkinter import Tk, Button, X, mainloop

# Create Teh Tk instance right away so we're sure we have it (i.e. it's
# not randomly given to some widget in the library or startup routines.)
T = Tk()
T.title('Xerblin')

# The only thing this "App" window provides is a means to quit the program.
Button(
    T,
    text='Close Xerblin',
    command=T.destroy
    ).pack(ipadx=123, ipady=23)


# Begin the script proper.
from xerblin.lib import words
from xerblin import Object
from xerblin.startup import startup_script
from xerblin.lib.widgets.listwidgets import MakeViewer, SequenceController
from xerblin.lib.guide import InscribeDocumentationWords
from xerblin.util.timed import Timed
from xerblin.util.backtime import attemptBackup
from xerblin.messaging import RootViewer, ModelMixin


def _makeGuideButton(I):
    '''
    Helper function to add a button to the main app that opens the Guide
    TextViewer (in case the user has closed it and all other viewers.)

    With this button and the close button the base "App" is finished.  You
    can get out of the system and you can always bootstrap back into it if
    you close everything (but the main window, which must by definition
    remain open for the whole program to keep running) by simply opening
    the Guide viewer and typing in any command you want to run (including
    the commands that open the rest of the viewers in your world.)
    '''
    Button(
        T,
        text='Open Guide',
        command=lambda: I.interpret("Guide")
        ).pack(
            expand=True,
            fill=X,
            ipadx=23,
            ipady=23,
            )


def main():

    # Create the world and populate it with the library's words.
    I = Object(name='Xerblin', dictionary=words)

    # Create a time-delayed proxy caller to attemptBackup()
    tm = Timed(T, lambda: attemptBackup(I))

    # Arrange to have it triggered on every NotifyMessage.
    ModelMixin.root = RootViewer(None, lambda message: tm.trigger())

    # By default ALWAYS open a ListViewer (i.e. SequenceController) on
    # the world's Stack.
    I.dictionary['StackViewer'] = MakeViewer(
        "Xerblin Stack",    # name
        I.stack,            # model
        SequenceController, # viewer/controller class
        )

    # Insert Guide, et. al. (the numbers are x, y, w, h.)
    InscribeDocumentationWords(I, (273, 30, 440, 550))

    I.interpret(startup_script)

    # Add the "dummy button".  I.e. you can always open the Guide so you're
    # not screwed if you close every window.  (Could also make it so that
    # clicking on the background does something:
    #     * menu pop up (but that's the same as "show Guide" in xerbin...)
    # Also, either exit or rtfm. lol.
    _makeGuideButton(I)

    # Go!
    mainloop()


if __name__ == '__main__':
    main()
